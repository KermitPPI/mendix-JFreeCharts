// This file was generated by Mendix Business Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package jfreecharts.actions;

import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileInputStream;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.RingPlot;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class PieCharts extends CustomJavaAction<String>
{
	private java.util.List<IMendixObject> __List2;
	private java.util.List<jfreecharts.proxies.RowPie> List2;
	private IMendixObject ImageEntity2;
	private String PieChartTitle;

	public PieCharts(IContext context, java.util.List<IMendixObject> List2, IMendixObject ImageEntity2, String PieChartTitle)
	{
		super(context);
		this.__List2 = List2;
		this.ImageEntity2 = ImageEntity2;
		this.PieChartTitle = PieChartTitle;
	}

	@Override
	public String executeAction() throws Exception
	{
		this.List2 = new java.util.ArrayList<jfreecharts.proxies.RowPie>();
		if (__List2 != null)
			for (IMendixObject __List2Element : __List2)
				this.List2.add(jfreecharts.proxies.RowPie.initialize(getContext(), __List2Element));

		// BEGIN USER CODE
		
		//Creates ring chart
		 RingChartDemo1 demoRing = new RingChartDemo1("");
		   // demoRing.pack();
		   // RefineryUtilities.centerFrameOnScreen(demoRing);
		  //  demoRing.setVisible(true);
		
		return "The chart prints";
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "PieCharts";
	}

	// BEGIN EXTRA CODE
	
		
	private class RingChartDemo1 {
		
	private static final long serialVersionUID = 2L;
		
		//Create a member variable for the chart classes that will retrieve list information from the outer class
		public java.util.List<jfreecharts.proxies.RowPie> ChartList = List2; //This is passed in from the outer class
		
		//Create a member variable for the chart class that will retrieve the image entity for the outer class
		public IMendixObject ringChartImage = ImageEntity2;

		//Create a member variable for the pie chart class that will retrieve the title of the from the outer class
		public String pieChartTitle = PieChartTitle;
		/**
		 * Default constructor.
		 *
		 * @param title  the frame title.
		 */
		public RingChartDemo1(String title) throws Exception {

			
			JFreeChart chart = createChart(createDataset());
		    //super(title);
		    //JPanel panel = createDemoPanel();
		    //panel.setPreferredSize(new java.awt.Dimension(500, 270));
		   // setContentPane(panel);
		 
		}

		/**
		 * Creates a sample dataset.
		 *
		 * @return a sample dataset.
		 */
		private PieDataset createDataset() throws Exception {

		    DefaultPieDataset dataset = new DefaultPieDataset();
		    
		  //Loop through the list and retrieve the data and place it in the pie chart
	        for(int i=0; i<ChartList.size();i++)
	        {
	        	dataset.setValue(ChartList.get(i).getXvalue(), ChartList.get(i).getYvalue());
	        	
	        }
		    
		    
		    //Example of how to insert data into dataset
		    //dataset.setValue("150", new Double(150));
		    //dataset.setValue("10", new Double(10));
		    //dataset.setValue("Three", new Double(27.5));
		    //dataset.setValue("Four", new Double(17.5));
		    //dataset.setValue("Five", new Double(11.0));
		    //dataset.setValue("Six", new Double(19.4));
		    return dataset;       
		 
		}
		 
		/**
		 * Creates a chart.
		 *
		 * @param dataset  the dataset.
		 *
		 * @return a chart.
		 */
		private JFreeChart createChart(PieDataset dataset) throws Exception {

		     
		    JFreeChart chart = ChartFactory.createRingChart(
		        pieChartTitle,  // chart title
		        dataset,             // data
		        true,               // include legend
		        true,
		        false
		    );

		    RingPlot plot = (RingPlot) chart.getPlot();
		    plot.setBackgroundPaint(Color.white);
		    plot.setLabelFont(new Font("SansSerif", Font.PLAIN, 12));
		    plot.setNoDataMessage("No data available");
		    plot.setCircular(true);
		    plot.setLabelGap(0.02);
		    plot.setStartAngle(180);
		    //plot.setMinimumArcAngleToDraw(175);
		    plot.setInteriorGap(.08);  //Changes the radius of the ring
		    plot.setSectionDepth(0.4);//Changes the thickness of the ring chart
		    
		    
		    for(int i=0; i<ChartList.size();i++)
	        {
	        	plot.setSectionPaint(ChartList.get(i).getXvalue(), new Color(ChartList.get(i).getR(), ChartList.get(i).getG(),ChartList.get(i).getB()));
	        	
	        }
		  	    
		    
	        int width=640; 
	        int height=480; 
	       
	        
	     //Store the image in an entity
	     
	     //Creates a new temp file 
	     
	     File RingChart = File.createTempFile("MyFile.png", ".tmp");
	     
	     //Saves the chart as png in the newly created file
	    ChartUtilities.saveChartAsPNG(RingChart, chart, width, height);
	       
	     	      
	     //Creates a new inputStream that points to the location of the created image
	     FileInputStream fileStream = new FileInputStream(RingChart);
	     //Stores this in the entity pieChartImage
	     com.mendix.core.Core.storeFileDocumentContent(getContext(),ringChartImage,fileStream);
		    
	     //Delete temporary file after exit 
	     RingChart.deleteOnExit();      
		    
		    return chart;
		     
		 
		}
		 
		/**
		 * Creates a panel for the demo (used by SuperDemo.java).
		 *
		 * @return A panel.
		 */
		
		//This createDemoPanel() method does not get called, it causes an error in server environment, there is no diplay device available
		public JPanel createDemoPanel() throws Exception {

		    JFreeChart chart = createChart(createDataset());
		    return new ChartPanel(chart);
		 
		}
		 
		/**
		 * Starting point for the demonstration application.
		 *
		 * @param args  ignored.
		 */
		

}
	
	
	// END EXTRA CODE
}
